###############################################################
#                                                             #
#                        ZSHELL - RUNCOM                      #
#                                                             #
#    Sections:                                                #
#       -> Environment                                        #
#       -> Options                                            #
#       -> Editor                                             #
#       -> Functions                                          #
#       -> Aliases                                            #
#       -> Source                                             #
#                                                             #
###############################################################

###############################################################
#                       Powerlevel 9K                         #
###############################################################
# Note that you should define any customizations at the top of your .zshrc
POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir rbenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status vi_mode)

###############################################################
#                          Plugins                            #
###############################################################

source ~/.zplug/init.zsh

    # An plugin to help remembering those aliases you defined once
    zplug "djui/alias-tips"

    # Fish-like autosuggestions for zsh
    zplug "zsh-users/zsh-autosuggestions"
        bindkey '^ ' autosuggest-accept

    zplug "zsh-users/zsh-completions"
    zplug "robbyrussell/oh-my-zsh"
        source $ZSH/oh-my-zsh.sh

    # ZSH port of Fish history search (up arrow)
    zplug "zsh-users/zsh-history-substring-search"
        bindkey -M vicmd 'k' history-substring-search-up
        bindkey -M vicmd 'j' history-substring-search-down

    # The most awesome Powerline theme for ZSH around!
    zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme

    # Adds many useful aliases and functions.
    zplug "plugins/git",   from:oh-my-zsh
    zplug "plugins/common-aliases",   from:oh-my-zsh
    zplug "plugins/vi-mode",   from:oh-my-zsh


    # autojump - a faster way to navigate your filesystem
    # Installed with apt-get, must source following folder in Debian:
    . /usr/share/autojump/autojump.sh
        # Jump To A Directory That Contains foo:
        #   j foo

    # Colorizes man output.
    zplug "zuxfoucault/colored-man-pages_mod"

    # zsh-syntax-highlighting must be loaded
    # after executing compinit command and sourcing other plugins
    # (If the defer tag is given 2 or above, run after compinit command)
    zplug "zsh-users/zsh-syntax-highlighting", defer:2

    # Install plugins if there are plugins that have not been installed
    if ! zplug check --verbose; then
        printf "Install? [y/N]: "
        if read -q; then
            echo; zplug install
        fi
    fi

zplug load #--verbose


###############################################################
#                          Options                            #
###############################################################

# History
HISTFILE=~/.zsh_history
HISTSIZE=1000000000000000000
SAVEHIST=$HISTSIZE

# My own settings
setopt vi

# VI disables CTRL-r history search
bindkey "^R" history-incremental-search-backward

# No output when background job finishs
setopt no_notify

# Background jobs will still running after shell is closed
setopt hup


##### TODO #####
# Colors
#export TERM="xterm-256color"
#export XDG_CONFIG_HOME=~/.config/

# Enable horizontal scrolling
synclient HorizTwoFingerScroll=1

# why would you type 'cd dir' if you could just type 'dir'?
setopt AUTO_CD

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=7

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Switches CapsLk and Ctrl
/usr/bin/setxkbmap -option "caps:ctrl_modifier"


export CHERE_INVOKING=1

###############################################################
#                          Editor                             #
###############################################################

# Why set $VISUAL instead of $EDITOR?
# http://robots.thoughtbot.com/visual-ize-the-future
export VISUAL="vim -p"
alias  vi="$VISUAL"
alias  vim="$VISUAL"

###############################################################
#                          Aliases                            #
###############################################################

source ~/.zsh.alias
unalias rm # Remove annoying verification when deleting

###############################################################
#                         Functions                           #
###############################################################

# Create dir and switch into it
function mkcd() {
    mkdir "$1" && cd "$1" ;
}

function gitvim {
  vim -p $(git status --short | awk ' { print $2 } ')
}

# Empty the trash in .trash
function empty-trash() {
    rm -rf ~/.trash/*
}

alias killbg='kill -KILL ${${(v)jobstates##*:*:}%=*}'

# Insert "sudo " at the beginning of the line
function prepend-sudo {
    if [[ $BUFFER != "sudo "* ]]; then
        BUFFER="sudo $BUFFER"; CURSOR+=5
    fi
}
zle -N prepend-sudo
[[ -n "^[s" ]] && \
bindkey "^[s" prepend-sudo

function downloadAllPDFs() {
    wget -p -r -nd -l 1 -e robots=off -A pdf "$1"
}

function compressImage() {
    for i in $@;do
        jpegoptim --size=400k "$i"
    done
}

function convertPDFtoPNG() {
    convert -density 150 "$1" -quality 90 "$1".png
}

function createAnki() {
    python ~/.vim/plugged/AnkiVim/anki-vim.py $1
}

function replaceTabs() {
    for i in $@;do
        sed 's/\t/    /g' $i > tmp
        mv tmp $i
    done
}

function genPW() {
    date +%s | sha256sum | base64 | head -c $1 ; echo
}

# function ct() {
#     saveIFS=$IFS;
#     IFS=$'\n';
#     array=($(tmux ls | awk -F":" '{ print $1 }'));
#     IFS=$saveIFS;

#     tmux switch -t $array[2]
#     tmux kill-session -t $array[1]
# }


###############################################################
#                          Source                             #
###############################################################

# Clustergit - Tool to search for git repos in current folder.
export PATH=$PATH:$HOME/Nextcloud/Studium/Useful/clustergit

# Path to texlive
export PATH=$PATH:/usr/local/texlive/2016/bin/x86_64-linux

# Path to Webstorm
export PATH=$PATH:/home/faraday/Software/Webstorm/bin/

# Path for GO
export GOPATH=/home/faraday/Software/GO
export PATH="$PATH:/home/faraday/Software/GO"

export ANDROID_HOME=/home/faraday/Android/Sdk
export PATH="${PATH}:ANDROID_HOME/platform-tools:ANDROID_HOME/tools"

# added by Miniconda3 4.3.21 installer
export PATH="/home/faraday/software/miniconda3/bin:$PATH"

# Texlive
PATH=/usr/local/texlive/2017/bin/x86_64-linux:$PATH; export PATH
MANPATH=/usr/local/texlive/2017/texmf-dist/doc/man:$MANPATH; export MANPATH
INFOPATH=/usr/local/texlive/2017/texmf-dist/doc/info:$INFOPATH; export INFOPATH

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
